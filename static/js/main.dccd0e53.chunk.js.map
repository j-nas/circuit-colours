{"version":3,"sources":["components/Display.js","components/KeypadButton.js","components/Keypad.js","components/AdSpace.js","App.js","getCircuitColour.js","reportWebVitals.js","index.js"],"names":["Display","props","color","className","appData","display","Button","id","onClick","event","label","Keypad","buttonLayout","map","key","keypad","enterNumber","clear","AdSpace","src","alt","App","useState","circuit","setCircuit","setDisplay","colour","setColour","useEffect","circuitNumber","colourOutput","getCircuitColour","Number","join","length","e","target","filter","a","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAEe,SAASA,EAAQC,GAG9B,OACE,qBACEC,MAAM,MACNC,UAAU,UAFZ,SAIGF,EAAMG,QAAQC,U,YCRN,SAASC,EAAOL,GAI7B,OACE,qBACEE,UAAU,eACVI,GAAIN,EAAMM,GACVC,QAASP,EAAMQ,MAHjB,SAKGR,EAAMS,QCTE,SAASC,EAAOV,GAI7B,IACMW,EADY,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACjCC,KAAI,SAACC,GAAD,OACjC,cAAC,EAAD,CACIP,GAAIO,EACJL,MAAOR,EAAMc,OAAOC,YACpBN,MAAOI,GACFA,MAMX,OACE,sBAAKX,UAAU,SAAf,UACGS,EAED,cAAC,EAAD,CACEL,GAAG,MACHE,MAAOR,EAAMc,OAAOE,MACpBP,MAAM,WCxBC,SAASQ,IAGtB,OACE,8BACE,qBAAKC,IAJW,mBAIOC,IAAI,mBCyClBC,MAxCf,WACE,MAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA8BF,mBAAS,IAAvC,mBAAOjB,EAAP,KAAgBoB,EAAhB,KACA,EAA4BH,mBAAS,IAArC,mBAAOI,EAAP,KAAeC,EAAf,KAUAC,qBAAU,WACRD,ECtBW,SAA0BE,GACvC,IAAIC,EAAe,GACnB,OAAQD,EAAgB,GACtB,KAAK,EACHC,EAAe,OACf,MACF,KAAK,EAGL,KAAK,EACHA,EAAe,MACf,MACF,KAAK,EAGL,KAAK,EACHA,EAAe,QACf,MACF,KAAK,EACHA,EAAe,OAKnB,OAAOA,EDFKC,CAAiBC,OAAOT,EAAQU,KAAK,OACzB,IAAnBV,EAAQW,OACTT,EAAW,2BAEXA,EAAW,WAAD,OAAYO,OAAOT,EAAQU,KAAK,KAAhC,eAA2CP,MAEtD,CAACrB,EAASkB,EAASG,IAGtB,IAAMtB,EAAU,CAAEC,UAASkB,UAASG,UAC9BX,EAAS,CAAEC,YAnBG,SAACmB,GACnBX,EAAW,GAAD,mBAAKD,GAAL,CAAcY,EAAEC,OAAO7B,OAkBLU,MAfhB,WACZO,EAAWD,EAAQc,QAAO,SAAAC,GAAC,OAAKA,QAiBlC,OACE,sBAAKnC,UAAU,gBAAf,UAGC,cAACH,EAAD,CAASI,QAAWA,IACpB,cAACO,EAAD,CAAQI,OAAUA,IAClB,cAACG,EAAD,QE7BUqB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.dccd0e53.chunk.js","sourcesContent":["import React from \"react\"\nimport \"./style/display.css\"\nexport default function Display(props) {\n  \n  \n  return (\n    <div \n      color=\"red\"\n      className=\"display\"\n    >\n      {props.appData.display}\n      \n    </div>\n  )\n}","import React from \"react\"\nimport \"./style/button.css\"\nexport default function Button(props) {\n  \n  \n\n  return(\n    <div\n      className=\"keypadButton\"\n      id={props.id}\n      onClick={props.event}\n    >\n      {props.label}\n      \n    </div>\n  )\n}","import React from \"react\"\nimport \"./style/keypad.css\"\nimport KeypadButton from \"./KeypadButton\"\nexport default function Keypad(props) {\n\n\n  // const oneToNine = Array(8).fill(1).map(() => oneToNine[0]++)\n  const oneToNine = [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"0\"]\n  const buttonLayout = oneToNine.map((key) => (\n    <KeypadButton\n        id={key}\n        event={props.keypad.enterNumber}\n        label={key}\n        key={key}\n      />\n  ))\n      \n    \n  \n  return(\n    <div className=\"keypad\">\n      {buttonLayout}\n      \n      <KeypadButton\n        id=\"clr\"\n        event={props.keypad.clear}\n        label=\"CLR\"\n      />\n      \n      \n    </div>\n\n    \n  )\n}\n","import React from \"react\"\n// import \"./style/adspace.css\"\nexport default function AdSpace() {\n  const placeholder = \"./placholder.jpg\"\n  \n  return (\n    <div>\n      <img src={placeholder} alt=\"advertisment\"/>\n    </div>\n  )\n}","import './App.css';\nimport React, { useState, useEffect } from 'react';\nimport getCircuitColour from './getCircuitColour';\n\nimport Display from './components/Display'\nimport Keypad from './components/Keypad'\nimport AdSpace from './components/AdSpace'\n\nfunction App() {\n  const [circuit, setCircuit] = useState([])\n  const [display, setDisplay] = useState(\"\")\n  const [colour, setColour] = useState(\"\")\n\n  const enterNumber = (e) =>{\n    setCircuit([...circuit, e.target.id])\n  }\n \n  const clear = () => {\n    setCircuit(circuit.filter(a => !a))\n  }\n  \n  useEffect(() => {\n    setColour(getCircuitColour(Number(circuit.join(''))))\n    if(circuit.length === 0) {\n      setDisplay(\"Enter a number to begin\")\n    } else {\n      setDisplay(`Circuit ${Number(circuit.join(''))} is ${colour}`)\n    }\n  }, [display, circuit, colour])\n\n\n  const appData = { display, circuit, colour }\n  const keypad = { enterNumber, clear}\n  \n  \n  return (\n    <div className=\"App container\">\n     \n     \n     <Display appData = {appData}/>\n     <Keypad keypad = {keypad}/>\n     <AdSpace />\n     \n\n    </div>\n  );\n}\n\nexport default App;\n","export default function getCircuitColour(circuitNumber) {\n  let colourOutput = \"\"\n  switch (circuitNumber % 6) {\n    case 0:\n      colourOutput = \"blue\"\n      break\n    case 1:\n      colourOutput = \"red\"\n      break\n    case 2:\n      colourOutput = \"red\"  \n      break\n    case 3:\n      colourOutput = \"black\"\n      break\n    case 4: \n      colourOutput = \"black\"\n      break\n    case 5: \n      colourOutput = \"blue\"\n      break\n    default:\n      break\n  }\n  return(colourOutput)\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}